image:
  repository: "$IMAGE_REPO"
  tag: "$IMAGE_TAG"

imagePullSecrets: []

replicas: 2

disks:
  namespace: default
  limitPerProject: "536870912000" # In bytes, 500 gb

  # Default storage class is used if null or empty.
  storageClassName: null

platform:
  clusterName:
  authUrl:
  token: {}

docs:
  enabled: true

resources:
  requests:
    cpu: "0.1"
    memory: "150Mi"
  limits:
    cpu: "0.3"
    memory: "300Mi"

ingress:
  enabled: false
  ingressClassName: ""
  hosts: []
  annotations: {}

service:
  annotations: {}

cors: {}

secrets: []

sentry: {}

priorityClassName: ""


jobProjectNamespaceMigration:
  schedule: "*/5 * * * *" # every 5 minutes
  startingDeadlineSeconds: 300
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1

  resources:
    requests:
      cpu: "100m"
      memory: "100Mi"
    limits:
      cpu: "200m"
      memory: "200Mi"

admissionControllerDeployment:
  resources:
    requests:
      cpu: "100m"
      memory: "100Mi"
    limits:
      cpu: "200m"
      memory: "200Mi"

admissionControllerService:
  port: 8080

admissionController:
  serviceName: platform-disks-admission-controller
  webhookPath: /admission-controller/mutate
  namespaceSelector:
    matchExpressions:
    - key: platform.apolo.us/org
      operator: Exists
    - key: platform.apolo.us/project
      operator: Exists
  objectSelector: {}
  rules:
  - apiGroups: [""]
    apiVersions: [v1]
    operations: [CREATE, UPDATE]
    resources: [pods]
    scope: '*'
  - apiGroups: [""]
    apiVersions: [v1]
    operations: [CREATE]
    resources: [persistentvolumeclaims]
    scope: '*'
  reinvocationPolicy: IfNeeded
  failurePolicy: Fail
