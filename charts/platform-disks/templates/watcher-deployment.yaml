apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "platformDisks.fullname" . }}-watcher
  labels: {{ include "platformDisks.labels.standard" . | nindent 4 }}
    service: platform-disks-watcher
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "platformDisks.name" . }}
      release: {{ .Release.Name }}
      service: platform-disks-watcher
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ include "platformDisks.name" . }}
        release: {{ .Release.Name }}
        service: platform-disks-watcher
    spec:
      {{- if .Values.imagePullSecrets}}
      imagePullSecrets: {{ toYaml .Values.imagePullSecrets | nindent 6 }}
      {{- end}}
      containers:
      - name: platform-disks-watcher
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        {{- if .Values.resources }}
        resources: {{ toYaml .Values.resources | nindent 10 }}
        {{- end }}
        command: ["platform-disk-api-watcher"]
        env:
        - name: NP_DISK_API_K8S_API_URL
          value: https://kubernetes.default:443
        - name: NP_DISK_API_K8S_AUTH_TYPE
          value: token
        - name: NP_DISK_API_K8S_CA_PATH
          value: {{ include "platformDisks.kubeAuthMountRoot" . }}/ca.crt
        - name: NP_DISK_API_K8S_TOKEN_PATH
          value: {{ include "platformDisks.kubeAuthMountRoot" . }}/token
        - name: NP_DISK_API_K8S_NS
          value: {{ .Values.disks.namespace | default "default" | quote }}
        {{- if .Values.sentry }}
        - name: SENTRY_DSN
          value: {{ .Values.sentry.dsn }}
        - name: SENTRY_CLUSTER_NAME
          value: {{ .Values.sentry.clusterName }}
        - name: SENTRY_APP_NAME
          value: platform-disks-watcher
        - name: SENTRY_SAMPLE_RATE
          value: {{ .Values.sentry.sampleRate | default 0 | quote }}
        {{- end }}
        volumeMounts:
        - mountPath: {{ include "platformDisks.kubeAuthMountRoot" . }}
          name: kube-api-data
          readOnly: true

      {{- if .Values.securityContext.enabled }}
      securityContext:
        runAsUser: {{ .Values.securityContext.runAsUser }}
        runAsGroup: {{ .Values.securityContext.runAsGroup }}
        runAsNonRoot: {{ .Values.securityContext.runAsNonRoot }}
        fsGroup: {{ .Values.securityContext.fsGroup }}
        allowPrivilegeEscalation: {{ .Values.securityContext.allowPrivilegeEscalation }}
        fsGroupChangePolicy: {{ .Values.securityContext.fsGroupChangePolicy}}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      volumes:
      - name: kube-api-data
        projected:
          sources:
          - serviceAccountToken:
              expirationSeconds: 3600
              path: token
          - configMap:
              name: kube-root-ca.crt
              items:
              - key: ca.crt
                path: ca.crt
