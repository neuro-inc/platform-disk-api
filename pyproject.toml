[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]
build-backend = "poetry_dynamic_versioning.backend"

# Can be replaced to [project] when poetry-dynamic-versioning drops [tool.poetry] support in favor of [project] table.
[tool.poetry]
name = "platform-disk-api"
version = "0.0.0"
description = "Neu.ro platform disk api"
readme = "README.md"
license = "Proprietary"
authors = ["Apolo.us"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
]

[tool.poetry.dependencies]
python = ">=3.12,<4.0"
aiohttp = {version = "3.12.15", extras = ["speedups"]}
yarl = "<2"
neuro-auth-client = "25.8.2"
marshmallow = "4.0.1"
aiohttp-apispec = "3.0.0b2"
markupsafe = "3.0.2"
neuro-logging = "25.6.1"
aiohttp-cors = "0.8.1"
apolo-kube-client = "25.7.2"
uvloop = "^0.21.0"
pydantic = "^2.11.7"
apolo-events-client = "^25.8.0"

[tool.poetry.scripts]
platform-disk-api = "platform_disk_api.api:main"
platform-disk-api-watcher = "platform_disk_api.usage_watcher:main"
platform-disk-project-namespace-migration-job = "platform_disk_api.project_namespace_migration_job:main"
platform-disk-admission-controller = "platform_disk_api.admission_controller.__main__:main"

[tool.poetry.group.dev.dependencies]
mypy = "1.18.1"
pre-commit = "4.3.0"
aiodocker = "0.24.0"
pytest = "8.4.2"
pytest-asyncio = "1.2.0"
pytest-cov = "7.0.0"
pytest-aiohttp = "^1.1.0"

[tool.ruff]
target-version = "py313"

[tool.ruff.lint]
select = [
    "E", "F", "I", "C90", "UP", "B", "ASYNC", "N", "A", "C4", "EM", "FA", "ICN",
    "G", "PIE", "T20", "PYI", "PT", "RET"
]
ignore = [
  "A003",  # Class attribute "..." is shadowing a Python builtin
  "N818",
  "EM101"
]

[tool.ruff.lint.isort]
combine-as-imports = true
lines-after-imports = 2

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.poetry.requires-plugins]
poetry-plugin-export = ">=1.8"
poetry-dynamic-versioning = { version = ">=1.0.0,<2.0.0", extras = ["plugin"] }

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
filterwarnings = [
    "error",
    "ignore::DeprecationWarning:jose",
    "ignore:distutils Version classes are deprecated:DeprecationWarning:",
    "ignore::ResourceWarning:",
    "ignore:It is recommended to use web.AppKey instances for keys.",
]

[tool.coverage.run]
branch = true
source = ["platform_disk_api"]

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_untyped_defs = true
follow_imports = "silent"
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = "aiohttp_security"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "aiohttp_security.api"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "jose"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "neuro_auth_client.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pytest"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "setuptools"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "trafaret"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "aiohttp_cors"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "aiohttp_apispec"
ignore_missing_imports = true

[tool.black]
exclude = '''
/(
      \.git
    | venv
    | __pycache__
)/
'''
